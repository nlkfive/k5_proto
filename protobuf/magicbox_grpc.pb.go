// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.2
// source: k5_proto/proto/magicbox.proto

package protobufpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// MagicboxSvcClient is the client API for MagicboxSvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MagicboxSvcClient interface {
	CreateLuckyVault(ctx context.Context, in *CreateLuckyVaultReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type magicboxSvcClient struct {
	cc grpc.ClientConnInterface
}

func NewMagicboxSvcClient(cc grpc.ClientConnInterface) MagicboxSvcClient {
	return &magicboxSvcClient{cc}
}

func (c *magicboxSvcClient) CreateLuckyVault(ctx context.Context, in *CreateLuckyVaultReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/protobuf.MagicboxSvc/CreateLuckyVault", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MagicboxSvcServer is the server API for MagicboxSvc service.
// All implementations must embed UnimplementedMagicboxSvcServer
// for forward compatibility
type MagicboxSvcServer interface {
	CreateLuckyVault(context.Context, *CreateLuckyVaultReq) (*emptypb.Empty, error)
	mustEmbedUnimplementedMagicboxSvcServer()
}

// UnimplementedMagicboxSvcServer must be embedded to have forward compatible implementations.
type UnimplementedMagicboxSvcServer struct {
}

func (UnimplementedMagicboxSvcServer) CreateLuckyVault(context.Context, *CreateLuckyVaultReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLuckyVault not implemented")
}
func (UnimplementedMagicboxSvcServer) mustEmbedUnimplementedMagicboxSvcServer() {}

// UnsafeMagicboxSvcServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MagicboxSvcServer will
// result in compilation errors.
type UnsafeMagicboxSvcServer interface {
	mustEmbedUnimplementedMagicboxSvcServer()
}

func RegisterMagicboxSvcServer(s grpc.ServiceRegistrar, srv MagicboxSvcServer) {
	s.RegisterService(&MagicboxSvc_ServiceDesc, srv)
}

func _MagicboxSvc_CreateLuckyVault_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLuckyVaultReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MagicboxSvcServer).CreateLuckyVault(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.MagicboxSvc/CreateLuckyVault",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MagicboxSvcServer).CreateLuckyVault(ctx, req.(*CreateLuckyVaultReq))
	}
	return interceptor(ctx, in, info, handler)
}

// MagicboxSvc_ServiceDesc is the grpc.ServiceDesc for MagicboxSvc service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MagicboxSvc_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.MagicboxSvc",
	HandlerType: (*MagicboxSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateLuckyVault",
			Handler:    _MagicboxSvc_CreateLuckyVault_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "k5_proto/proto/magicbox.proto",
}
