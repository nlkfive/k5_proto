// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.2
// source: k5_proto/proto/f1racing.proto

package protobufpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RaceCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RaceId            string `protobuf:"bytes,1,opt,name=RaceId,proto3" json:"RaceId,omitempty"`
	TxnHash           string `protobuf:"bytes,2,opt,name=TxnHash,proto3" json:"TxnHash,omitempty"`
	TournamentAddress string `protobuf:"bytes,3,opt,name=TournamentAddress,proto3" json:"TournamentAddress,omitempty"`
	NoSlot            uint32 `protobuf:"varint,4,opt,name=NoSlot,proto3" json:"NoSlot,omitempty"`
	StartAt           int64  `protobuf:"varint,5,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	RaceNo            uint32 `protobuf:"varint,6,opt,name=RaceNo,proto3" json:"RaceNo,omitempty"`
	Timestamp         int64  `protobuf:"varint,7,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
}

func (x *RaceCreateReq) Reset() {
	*x = RaceCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_f1racing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaceCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaceCreateReq) ProtoMessage() {}

func (x *RaceCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_f1racing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaceCreateReq.ProtoReflect.Descriptor instead.
func (*RaceCreateReq) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_f1racing_proto_rawDescGZIP(), []int{0}
}

func (x *RaceCreateReq) GetRaceId() string {
	if x != nil {
		return x.RaceId
	}
	return ""
}

func (x *RaceCreateReq) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

func (x *RaceCreateReq) GetTournamentAddress() string {
	if x != nil {
		return x.TournamentAddress
	}
	return ""
}

func (x *RaceCreateReq) GetNoSlot() uint32 {
	if x != nil {
		return x.NoSlot
	}
	return 0
}

func (x *RaceCreateReq) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *RaceCreateReq) GetRaceNo() uint32 {
	if x != nil {
		return x.RaceNo
	}
	return 0
}

func (x *RaceCreateReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type RaceResultUpdatedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RaceId          string `protobuf:"bytes,1,opt,name=RaceId,proto3" json:"RaceId,omitempty"`
	ResultTxnHash   string `protobuf:"bytes,2,opt,name=ResultTxnHash,proto3" json:"ResultTxnHash,omitempty"`
	ResultUpdatedAt int64  `protobuf:"varint,3,opt,name=ResultUpdatedAt,proto3" json:"ResultUpdatedAt,omitempty"`
	Result          string `protobuf:"bytes,4,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *RaceResultUpdatedReq) Reset() {
	*x = RaceResultUpdatedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_f1racing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaceResultUpdatedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaceResultUpdatedReq) ProtoMessage() {}

func (x *RaceResultUpdatedReq) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_f1racing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaceResultUpdatedReq.ProtoReflect.Descriptor instead.
func (*RaceResultUpdatedReq) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_f1racing_proto_rawDescGZIP(), []int{1}
}

func (x *RaceResultUpdatedReq) GetRaceId() string {
	if x != nil {
		return x.RaceId
	}
	return ""
}

func (x *RaceResultUpdatedReq) GetResultTxnHash() string {
	if x != nil {
		return x.ResultTxnHash
	}
	return ""
}

func (x *RaceResultUpdatedReq) GetResultUpdatedAt() int64 {
	if x != nil {
		return x.ResultUpdatedAt
	}
	return 0
}

func (x *RaceResultUpdatedReq) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type RaceCancelledReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RaceId        string `protobuf:"bytes,1,opt,name=RaceId,proto3" json:"RaceId,omitempty"`
	CancelTxnHash string `protobuf:"bytes,2,opt,name=CancelTxnHash,proto3" json:"CancelTxnHash,omitempty"`
	CancelledAt   int64  `protobuf:"varint,3,opt,name=CancelledAt,proto3" json:"CancelledAt,omitempty"`
}

func (x *RaceCancelledReq) Reset() {
	*x = RaceCancelledReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_f1racing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaceCancelledReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaceCancelledReq) ProtoMessage() {}

func (x *RaceCancelledReq) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_f1racing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaceCancelledReq.ProtoReflect.Descriptor instead.
func (*RaceCancelledReq) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_f1racing_proto_rawDescGZIP(), []int{2}
}

func (x *RaceCancelledReq) GetRaceId() string {
	if x != nil {
		return x.RaceId
	}
	return ""
}

func (x *RaceCancelledReq) GetCancelTxnHash() string {
	if x != nil {
		return x.CancelTxnHash
	}
	return ""
}

func (x *RaceCancelledReq) GetCancelledAt() int64 {
	if x != nil {
		return x.CancelledAt
	}
	return 0
}

type RewardGrantedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnHash           string `protobuf:"bytes,1,opt,name=TxnHash,proto3" json:"TxnHash,omitempty"`
	WinnerAddress     string `protobuf:"bytes,2,opt,name=WinnerAddress,proto3" json:"WinnerAddress,omitempty"`
	WinnerIndex       int64  `protobuf:"varint,3,opt,name=WinnerIndex,proto3" json:"WinnerIndex,omitempty"`
	TournamentAddress string `protobuf:"bytes,4,opt,name=TournamentAddress,proto3" json:"TournamentAddress,omitempty"`
	AssetId           string `protobuf:"bytes,5,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
	Timestamp         int64  `protobuf:"varint,6,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
}

func (x *RewardGrantedReq) Reset() {
	*x = RewardGrantedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_f1racing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardGrantedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardGrantedReq) ProtoMessage() {}

func (x *RewardGrantedReq) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_f1racing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardGrantedReq.ProtoReflect.Descriptor instead.
func (*RewardGrantedReq) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_f1racing_proto_rawDescGZIP(), []int{3}
}

func (x *RewardGrantedReq) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

func (x *RewardGrantedReq) GetWinnerAddress() string {
	if x != nil {
		return x.WinnerAddress
	}
	return ""
}

func (x *RewardGrantedReq) GetWinnerIndex() int64 {
	if x != nil {
		return x.WinnerIndex
	}
	return 0
}

func (x *RewardGrantedReq) GetTournamentAddress() string {
	if x != nil {
		return x.TournamentAddress
	}
	return ""
}

func (x *RewardGrantedReq) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *RewardGrantedReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type RaceRegisteredReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnHash            string `protobuf:"bytes,1,opt,name=TxnHash,proto3" json:"TxnHash,omitempty"`
	RaceId             string `protobuf:"bytes,2,opt,name=RaceId,proto3" json:"RaceId,omitempty"`
	ParticipantAddress string `protobuf:"bytes,3,opt,name=ParticipantAddress,proto3" json:"ParticipantAddress,omitempty"`
	Slot               uint32 `protobuf:"varint,4,opt,name=Slot,proto3" json:"Slot,omitempty"`
	Timestamp          int64  `protobuf:"varint,5,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
}

func (x *RaceRegisteredReq) Reset() {
	*x = RaceRegisteredReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_f1racing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaceRegisteredReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaceRegisteredReq) ProtoMessage() {}

func (x *RaceRegisteredReq) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_f1racing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaceRegisteredReq.ProtoReflect.Descriptor instead.
func (*RaceRegisteredReq) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_f1racing_proto_rawDescGZIP(), []int{4}
}

func (x *RaceRegisteredReq) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

func (x *RaceRegisteredReq) GetRaceId() string {
	if x != nil {
		return x.RaceId
	}
	return ""
}

func (x *RaceRegisteredReq) GetParticipantAddress() string {
	if x != nil {
		return x.ParticipantAddress
	}
	return ""
}

func (x *RaceRegisteredReq) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *RaceRegisteredReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type GetTournamentAddressListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TournamentAddressList []string `protobuf:"bytes,1,rep,name=TournamentAddressList,proto3" json:"TournamentAddressList,omitempty"`
}

func (x *GetTournamentAddressListRes) Reset() {
	*x = GetTournamentAddressListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_f1racing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTournamentAddressListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTournamentAddressListRes) ProtoMessage() {}

func (x *GetTournamentAddressListRes) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_f1racing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTournamentAddressListRes.ProtoReflect.Descriptor instead.
func (*GetTournamentAddressListRes) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_f1racing_proto_rawDescGZIP(), []int{5}
}

func (x *GetTournamentAddressListRes) GetTournamentAddressList() []string {
	if x != nil {
		return x.TournamentAddressList
	}
	return nil
}

type CheckTournamentAddressExistsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TournamentAddress string `protobuf:"bytes,1,opt,name=TournamentAddress,proto3" json:"TournamentAddress,omitempty"`
}

func (x *CheckTournamentAddressExistsReq) Reset() {
	*x = CheckTournamentAddressExistsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_f1racing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTournamentAddressExistsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTournamentAddressExistsReq) ProtoMessage() {}

func (x *CheckTournamentAddressExistsReq) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_f1racing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTournamentAddressExistsReq.ProtoReflect.Descriptor instead.
func (*CheckTournamentAddressExistsReq) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_f1racing_proto_rawDescGZIP(), []int{6}
}

func (x *CheckTournamentAddressExistsReq) GetTournamentAddress() string {
	if x != nil {
		return x.TournamentAddress
	}
	return ""
}

type CheckTournamentAddressExistsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsExists bool `protobuf:"varint,1,opt,name=IsExists,proto3" json:"IsExists,omitempty"`
}

func (x *CheckTournamentAddressExistsRes) Reset() {
	*x = CheckTournamentAddressExistsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_f1racing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTournamentAddressExistsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTournamentAddressExistsRes) ProtoMessage() {}

func (x *CheckTournamentAddressExistsRes) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_f1racing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTournamentAddressExistsRes.ProtoReflect.Descriptor instead.
func (*CheckTournamentAddressExistsRes) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_f1racing_proto_rawDescGZIP(), []int{7}
}

func (x *CheckTournamentAddressExistsRes) GetIsExists() bool {
	if x != nil {
		return x.IsExists
	}
	return false
}

var File_k5_proto_proto_f1racing_proto protoreflect.FileDescriptor

var file_k5_proto_proto_f1racing_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6b, 0x35, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x66, 0x31, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x01, 0x0a, 0x0d, 0x52, 0x61, 0x63, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x53, 0x6c,
	0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4e, 0x6f, 0x53, 0x6c, 0x6f, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61,
	0x63, 0x65, 0x4e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x61, 0x63, 0x65,
	0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x22, 0x96, 0x01, 0x0a, 0x14, 0x52, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x78, 0x6e, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x72, 0x0a, 0x10, 0x52, 0x61, 0x63,
	0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54,
	0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x22, 0xda, 0x01,
	0x0a, 0x10, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x0d,
	0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xa7, 0x01, 0x0a, 0x11, 0x52,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0x53, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x15, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4f, 0x0a, 0x1f, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x11,
	0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3d, 0x0a, 0x1f, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x49, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x49, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x32, 0xbb, 0x04, 0x0a, 0x0b, 0x46, 0x31,
	0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x53, 0x76, 0x63, 0x12, 0x3d, 0x0a, 0x0a, 0x52, 0x61, 0x63,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x52, 0x61, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x11, 0x52, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x0d, 0x52, 0x61, 0x63, 0x65, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x52, 0x61, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x0d, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x45, 0x0a, 0x0e, 0x52, 0x61, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x59, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x12, 0x74, 0x0a, 0x1c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x3b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_k5_proto_proto_f1racing_proto_rawDescOnce sync.Once
	file_k5_proto_proto_f1racing_proto_rawDescData = file_k5_proto_proto_f1racing_proto_rawDesc
)

func file_k5_proto_proto_f1racing_proto_rawDescGZIP() []byte {
	file_k5_proto_proto_f1racing_proto_rawDescOnce.Do(func() {
		file_k5_proto_proto_f1racing_proto_rawDescData = protoimpl.X.CompressGZIP(file_k5_proto_proto_f1racing_proto_rawDescData)
	})
	return file_k5_proto_proto_f1racing_proto_rawDescData
}

var file_k5_proto_proto_f1racing_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_k5_proto_proto_f1racing_proto_goTypes = []interface{}{
	(*RaceCreateReq)(nil),                   // 0: protobuf.RaceCreateReq
	(*RaceResultUpdatedReq)(nil),            // 1: protobuf.RaceResultUpdatedReq
	(*RaceCancelledReq)(nil),                // 2: protobuf.RaceCancelledReq
	(*RewardGrantedReq)(nil),                // 3: protobuf.RewardGrantedReq
	(*RaceRegisteredReq)(nil),               // 4: protobuf.RaceRegisteredReq
	(*GetTournamentAddressListRes)(nil),     // 5: protobuf.GetTournamentAddressListRes
	(*CheckTournamentAddressExistsReq)(nil), // 6: protobuf.CheckTournamentAddressExistsReq
	(*CheckTournamentAddressExistsRes)(nil), // 7: protobuf.CheckTournamentAddressExistsRes
	(*emptypb.Empty)(nil),                   // 8: google.protobuf.Empty
}
var file_k5_proto_proto_f1racing_proto_depIdxs = []int32{
	0, // 0: protobuf.F1racingSvc.RaceCreate:input_type -> protobuf.RaceCreateReq
	1, // 1: protobuf.F1racingSvc.RaceResultUpdated:input_type -> protobuf.RaceResultUpdatedReq
	2, // 2: protobuf.F1racingSvc.RaceCancelled:input_type -> protobuf.RaceCancelledReq
	3, // 3: protobuf.F1racingSvc.RewardGranted:input_type -> protobuf.RewardGrantedReq
	4, // 4: protobuf.F1racingSvc.RaceRegistered:input_type -> protobuf.RaceRegisteredReq
	8, // 5: protobuf.F1racingSvc.GetTournamentAddressList:input_type -> google.protobuf.Empty
	6, // 6: protobuf.F1racingSvc.CheckTournamentAddressExists:input_type -> protobuf.CheckTournamentAddressExistsReq
	8, // 7: protobuf.F1racingSvc.RaceCreate:output_type -> google.protobuf.Empty
	8, // 8: protobuf.F1racingSvc.RaceResultUpdated:output_type -> google.protobuf.Empty
	8, // 9: protobuf.F1racingSvc.RaceCancelled:output_type -> google.protobuf.Empty
	8, // 10: protobuf.F1racingSvc.RewardGranted:output_type -> google.protobuf.Empty
	8, // 11: protobuf.F1racingSvc.RaceRegistered:output_type -> google.protobuf.Empty
	5, // 12: protobuf.F1racingSvc.GetTournamentAddressList:output_type -> protobuf.GetTournamentAddressListRes
	7, // 13: protobuf.F1racingSvc.CheckTournamentAddressExists:output_type -> protobuf.CheckTournamentAddressExistsRes
	7, // [7:14] is the sub-list for method output_type
	0, // [0:7] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_k5_proto_proto_f1racing_proto_init() }
func file_k5_proto_proto_f1racing_proto_init() {
	if File_k5_proto_proto_f1racing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_k5_proto_proto_f1racing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaceCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_f1racing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaceResultUpdatedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_f1racing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaceCancelledReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_f1racing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardGrantedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_f1racing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaceRegisteredReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_f1racing_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTournamentAddressListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_f1racing_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTournamentAddressExistsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_f1racing_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTournamentAddressExistsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_k5_proto_proto_f1racing_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_k5_proto_proto_f1racing_proto_goTypes,
		DependencyIndexes: file_k5_proto_proto_f1racing_proto_depIdxs,
		MessageInfos:      file_k5_proto_proto_f1racing_proto_msgTypes,
	}.Build()
	File_k5_proto_proto_f1racing_proto = out.File
	file_k5_proto_proto_f1racing_proto_rawDesc = nil
	file_k5_proto_proto_f1racing_proto_goTypes = nil
	file_k5_proto_proto_f1racing_proto_depIdxs = nil
}
