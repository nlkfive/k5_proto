// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.2
// source: k5_proto/proto/mkp.proto

package protobufpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTradingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradingId  string `protobuf:"bytes,1,opt,name=tradingId,proto3" json:"tradingId,omitempty"`
	TxnHash    string `protobuf:"bytes,2,opt,name=txnHash,proto3" json:"txnHash,omitempty"`
	AssetId    string `protobuf:"bytes,3,opt,name=assetId,proto3" json:"assetId,omitempty"`
	Seller     string `protobuf:"bytes,4,opt,name=seller,proto3" json:"seller,omitempty"`
	NftAddress string `protobuf:"bytes,5,opt,name=nftAddress,proto3" json:"nftAddress,omitempty"`
	PriceInWei string `protobuf:"bytes,6,opt,name=priceInWei,proto3" json:"priceInWei,omitempty"`
	ExpiredAt  uint64 `protobuf:"varint,7,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"`
	CreatedAt  int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *CreateTradingReq) Reset() {
	*x = CreateTradingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_mkp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTradingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTradingReq) ProtoMessage() {}

func (x *CreateTradingReq) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_mkp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTradingReq.ProtoReflect.Descriptor instead.
func (*CreateTradingReq) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_mkp_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTradingReq) GetTradingId() string {
	if x != nil {
		return x.TradingId
	}
	return ""
}

func (x *CreateTradingReq) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

func (x *CreateTradingReq) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *CreateTradingReq) GetSeller() string {
	if x != nil {
		return x.Seller
	}
	return ""
}

func (x *CreateTradingReq) GetNftAddress() string {
	if x != nil {
		return x.NftAddress
	}
	return ""
}

func (x *CreateTradingReq) GetPriceInWei() string {
	if x != nil {
		return x.PriceInWei
	}
	return ""
}

func (x *CreateTradingReq) GetExpiredAt() uint64 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

func (x *CreateTradingReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type UpdateTradingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradingId      string `protobuf:"bytes,1,opt,name=tradingId,proto3" json:"tradingId,omitempty"`
	Buyer          string `protobuf:"bytes,2,opt,name=buyer,proto3" json:"buyer,omitempty"`
	ExecuteTxnHash string `protobuf:"bytes,4,opt,name=executeTxnHash,proto3" json:"executeTxnHash,omitempty"`
	TradedAt       int64  `protobuf:"varint,5,opt,name=tradedAt,proto3" json:"tradedAt,omitempty"`
}

func (x *UpdateTradingReq) Reset() {
	*x = UpdateTradingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_mkp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTradingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTradingReq) ProtoMessage() {}

func (x *UpdateTradingReq) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_mkp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTradingReq.ProtoReflect.Descriptor instead.
func (*UpdateTradingReq) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_mkp_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateTradingReq) GetTradingId() string {
	if x != nil {
		return x.TradingId
	}
	return ""
}

func (x *UpdateTradingReq) GetBuyer() string {
	if x != nil {
		return x.Buyer
	}
	return ""
}

func (x *UpdateTradingReq) GetExecuteTxnHash() string {
	if x != nil {
		return x.ExecuteTxnHash
	}
	return ""
}

func (x *UpdateTradingReq) GetTradedAt() int64 {
	if x != nil {
		return x.TradedAt
	}
	return 0
}

type CancelTradingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradingId     string  `protobuf:"bytes,1,opt,name=tradingId,proto3" json:"tradingId,omitempty"`
	Canceller     *string `protobuf:"bytes,2,opt,name=canceller,proto3,oneof" json:"canceller,omitempty"`
	CancelTxnHash string  `protobuf:"bytes,4,opt,name=cancelTxnHash,proto3" json:"cancelTxnHash,omitempty"`
	CancelledAt   int64   `protobuf:"varint,5,opt,name=cancelledAt,proto3" json:"cancelledAt,omitempty"`
}

func (x *CancelTradingReq) Reset() {
	*x = CancelTradingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_mkp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelTradingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTradingReq) ProtoMessage() {}

func (x *CancelTradingReq) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_mkp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTradingReq.ProtoReflect.Descriptor instead.
func (*CancelTradingReq) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_mkp_proto_rawDescGZIP(), []int{2}
}

func (x *CancelTradingReq) GetTradingId() string {
	if x != nil {
		return x.TradingId
	}
	return ""
}

func (x *CancelTradingReq) GetCanceller() string {
	if x != nil && x.Canceller != nil {
		return *x.Canceller
	}
	return ""
}

func (x *CancelTradingReq) GetCancelTxnHash() string {
	if x != nil {
		return x.CancelTxnHash
	}
	return ""
}

func (x *CancelTradingReq) GetCancelledAt() int64 {
	if x != nil {
		return x.CancelledAt
	}
	return 0
}

type AuctionCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnHash         string  `protobuf:"bytes,1,opt,name=TxnHash,proto3" json:"TxnHash,omitempty"`
	AssetOwner      string  `protobuf:"bytes,2,opt,name=AssetOwner,proto3" json:"AssetOwner,omitempty"`
	NftAddress      string  `protobuf:"bytes,3,opt,name=NftAddress,proto3" json:"NftAddress,omitempty"`
	AuctionId       string  `protobuf:"bytes,4,opt,name=AuctionId,proto3" json:"AuctionId,omitempty"`
	AssetId         string  `protobuf:"bytes,5,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
	StartTime       int64   `protobuf:"varint,6,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	BiddingEnd      int64   `protobuf:"varint,7,opt,name=BiddingEnd,proto3" json:"BiddingEnd,omitempty"`
	StartPriceInWei string  `protobuf:"bytes,8,opt,name=StartPriceInWei,proto3" json:"StartPriceInWei,omitempty"`
	RevealEnd       *int64  `protobuf:"varint,9,opt,name=RevealEnd,proto3,oneof" json:"RevealEnd,omitempty"`
	MinIncrement    *string `protobuf:"bytes,10,opt,name=MinIncrement,proto3,oneof" json:"MinIncrement,omitempty"`
}

func (x *AuctionCreateReq) Reset() {
	*x = AuctionCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_mkp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionCreateReq) ProtoMessage() {}

func (x *AuctionCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_mkp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionCreateReq.ProtoReflect.Descriptor instead.
func (*AuctionCreateReq) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_mkp_proto_rawDescGZIP(), []int{3}
}

func (x *AuctionCreateReq) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

func (x *AuctionCreateReq) GetAssetOwner() string {
	if x != nil {
		return x.AssetOwner
	}
	return ""
}

func (x *AuctionCreateReq) GetNftAddress() string {
	if x != nil {
		return x.NftAddress
	}
	return ""
}

func (x *AuctionCreateReq) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *AuctionCreateReq) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *AuctionCreateReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AuctionCreateReq) GetBiddingEnd() int64 {
	if x != nil {
		return x.BiddingEnd
	}
	return 0
}

func (x *AuctionCreateReq) GetStartPriceInWei() string {
	if x != nil {
		return x.StartPriceInWei
	}
	return ""
}

func (x *AuctionCreateReq) GetRevealEnd() int64 {
	if x != nil && x.RevealEnd != nil {
		return *x.RevealEnd
	}
	return 0
}

func (x *AuctionCreateReq) GetMinIncrement() string {
	if x != nil && x.MinIncrement != nil {
		return *x.MinIncrement
	}
	return ""
}

type AuctionBidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnHash    string  `protobuf:"bytes,1,opt,name=TxnHash,proto3" json:"TxnHash,omitempty"`
	Sender     string  `protobuf:"bytes,2,opt,name=Sender,proto3" json:"Sender,omitempty"`
	AuctionId  string  `protobuf:"bytes,3,opt,name=AuctionId,proto3" json:"AuctionId,omitempty"`
	BlindedBid *string `protobuf:"bytes,4,opt,name=BlindedBid,proto3,oneof" json:"BlindedBid,omitempty"`
	BidValue   *string `protobuf:"bytes,5,opt,name=BidValue,proto3,oneof" json:"BidValue,omitempty"`
	Deposit    *uint64 `protobuf:"varint,6,opt,name=Deposit,proto3,oneof" json:"Deposit,omitempty"`
}

func (x *AuctionBidReq) Reset() {
	*x = AuctionBidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_mkp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionBidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionBidReq) ProtoMessage() {}

func (x *AuctionBidReq) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_mkp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionBidReq.ProtoReflect.Descriptor instead.
func (*AuctionBidReq) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_mkp_proto_rawDescGZIP(), []int{4}
}

func (x *AuctionBidReq) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

func (x *AuctionBidReq) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *AuctionBidReq) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *AuctionBidReq) GetBlindedBid() string {
	if x != nil && x.BlindedBid != nil {
		return *x.BlindedBid
	}
	return ""
}

func (x *AuctionBidReq) GetBidValue() string {
	if x != nil && x.BidValue != nil {
		return *x.BidValue
	}
	return ""
}

func (x *AuctionBidReq) GetDeposit() uint64 {
	if x != nil && x.Deposit != nil {
		return *x.Deposit
	}
	return 0
}

type BlindAuctionRevealReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnHash        string `protobuf:"bytes,1,opt,name=TxnHash,proto3" json:"TxnHash,omitempty"`
	Sender         string `protobuf:"bytes,2,opt,name=Sender,proto3" json:"Sender,omitempty"`
	BlindAuctionId string `protobuf:"bytes,3,opt,name=BlindAuctionId,proto3" json:"BlindAuctionId,omitempty"`
	BlindedBid     string `protobuf:"bytes,4,opt,name=blindedBid,proto3" json:"blindedBid,omitempty"`
	Value          uint64 `protobuf:"varint,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *BlindAuctionRevealReq) Reset() {
	*x = BlindAuctionRevealReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_mkp_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlindAuctionRevealReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlindAuctionRevealReq) ProtoMessage() {}

func (x *BlindAuctionRevealReq) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_mkp_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlindAuctionRevealReq.ProtoReflect.Descriptor instead.
func (*BlindAuctionRevealReq) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_mkp_proto_rawDescGZIP(), []int{5}
}

func (x *BlindAuctionRevealReq) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

func (x *BlindAuctionRevealReq) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *BlindAuctionRevealReq) GetBlindAuctionId() string {
	if x != nil {
		return x.BlindAuctionId
	}
	return ""
}

func (x *BlindAuctionRevealReq) GetBlindedBid() string {
	if x != nil {
		return x.BlindedBid
	}
	return ""
}

func (x *BlindAuctionRevealReq) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type AuctionRefundReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnHash   string `protobuf:"bytes,1,opt,name=TxnHash,proto3" json:"TxnHash,omitempty"`
	Bidder    string `protobuf:"bytes,2,opt,name=Bidder,proto3" json:"Bidder,omitempty"`
	AuctionId string `protobuf:"bytes,3,opt,name=AuctionId,proto3" json:"AuctionId,omitempty"`
	Value     string `protobuf:"bytes,4,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *AuctionRefundReq) Reset() {
	*x = AuctionRefundReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_mkp_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionRefundReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionRefundReq) ProtoMessage() {}

func (x *AuctionRefundReq) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_mkp_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionRefundReq.ProtoReflect.Descriptor instead.
func (*AuctionRefundReq) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_mkp_proto_rawDescGZIP(), []int{6}
}

func (x *AuctionRefundReq) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

func (x *AuctionRefundReq) GetBidder() string {
	if x != nil {
		return x.Bidder
	}
	return ""
}

func (x *AuctionRefundReq) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *AuctionRefundReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type AuctionCancelledReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnHash   string `protobuf:"bytes,1,opt,name=TxnHash,proto3" json:"TxnHash,omitempty"`
	Canceller string `protobuf:"bytes,2,opt,name=Canceller,proto3" json:"Canceller,omitempty"`
	AuctionId string `protobuf:"bytes,3,opt,name=AuctionId,proto3" json:"AuctionId,omitempty"`
}

func (x *AuctionCancelledReq) Reset() {
	*x = AuctionCancelledReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_mkp_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionCancelledReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionCancelledReq) ProtoMessage() {}

func (x *AuctionCancelledReq) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_mkp_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionCancelledReq.ProtoReflect.Descriptor instead.
func (*AuctionCancelledReq) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_mkp_proto_rawDescGZIP(), []int{7}
}

func (x *AuctionCancelledReq) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

func (x *AuctionCancelledReq) GetCanceller() string {
	if x != nil {
		return x.Canceller
	}
	return ""
}

func (x *AuctionCancelledReq) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

type AuctionGrantRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnHash              string `protobuf:"bytes,1,opt,name=TxnHash,proto3" json:"TxnHash,omitempty"`
	AuctionHighestBidder string `protobuf:"bytes,2,opt,name=AuctionHighestBidder,proto3" json:"AuctionHighestBidder,omitempty"`
	AuctionId            string `protobuf:"bytes,3,opt,name=AuctionId,proto3" json:"AuctionId,omitempty"`
	AssetId              string `protobuf:"bytes,4,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
}

func (x *AuctionGrantRewardReq) Reset() {
	*x = AuctionGrantRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_mkp_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionGrantRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionGrantRewardReq) ProtoMessage() {}

func (x *AuctionGrantRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_mkp_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionGrantRewardReq.ProtoReflect.Descriptor instead.
func (*AuctionGrantRewardReq) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_mkp_proto_rawDescGZIP(), []int{8}
}

func (x *AuctionGrantRewardReq) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

func (x *AuctionGrantRewardReq) GetAuctionHighestBidder() string {
	if x != nil {
		return x.AuctionHighestBidder
	}
	return ""
}

func (x *AuctionGrantRewardReq) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *AuctionGrantRewardReq) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type CheckNftExistsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NfId string `protobuf:"bytes,1,opt,name=NfId,proto3" json:"NfId,omitempty"`
}

func (x *CheckNftExistsReq) Reset() {
	*x = CheckNftExistsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_mkp_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckNftExistsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckNftExistsReq) ProtoMessage() {}

func (x *CheckNftExistsReq) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_mkp_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckNftExistsReq.ProtoReflect.Descriptor instead.
func (*CheckNftExistsReq) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_mkp_proto_rawDescGZIP(), []int{9}
}

func (x *CheckNftExistsReq) GetNfId() string {
	if x != nil {
		return x.NfId
	}
	return ""
}

type CheckNftExistsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsExists bool `protobuf:"varint,1,opt,name=IsExists,proto3" json:"IsExists,omitempty"`
}

func (x *CheckNftExistsRes) Reset() {
	*x = CheckNftExistsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_mkp_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckNftExistsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckNftExistsRes) ProtoMessage() {}

func (x *CheckNftExistsRes) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_mkp_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckNftExistsRes.ProtoReflect.Descriptor instead.
func (*CheckNftExistsRes) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_mkp_proto_rawDescGZIP(), []int{10}
}

func (x *CheckNftExistsRes) GetIsExists() bool {
	if x != nil {
		return x.IsExists
	}
	return false
}

type HandleTransferErc721Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnHash   string `protobuf:"bytes,1,opt,name=TxnHash,proto3" json:"TxnHash,omitempty"`
	From      string `protobuf:"bytes,2,opt,name=From,proto3" json:"From,omitempty"`
	To        string `protobuf:"bytes,3,opt,name=To,proto3" json:"To,omitempty"`
	TokenId   string `protobuf:"bytes,4,opt,name=TokenId,proto3" json:"TokenId,omitempty"`
	Address   string `protobuf:"bytes,6,opt,name=Address,proto3" json:"Address,omitempty"`
	Timestamp int64  `protobuf:"varint,7,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
}

func (x *HandleTransferErc721Req) Reset() {
	*x = HandleTransferErc721Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_mkp_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleTransferErc721Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleTransferErc721Req) ProtoMessage() {}

func (x *HandleTransferErc721Req) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_mkp_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleTransferErc721Req.ProtoReflect.Descriptor instead.
func (*HandleTransferErc721Req) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_mkp_proto_rawDescGZIP(), []int{11}
}

func (x *HandleTransferErc721Req) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

func (x *HandleTransferErc721Req) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *HandleTransferErc721Req) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *HandleTransferErc721Req) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *HandleTransferErc721Req) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *HandleTransferErc721Req) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type HandleMintErc721Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnHash   string `protobuf:"bytes,1,opt,name=TxnHash,proto3" json:"TxnHash,omitempty"`
	NftId     string `protobuf:"bytes,2,opt,name=NftId,proto3" json:"NftId,omitempty"`
	CID       string `protobuf:"bytes,3,opt,name=CID,proto3" json:"CID,omitempty"`
	Data      string `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
	Address   string `protobuf:"bytes,5,opt,name=Address,proto3" json:"Address,omitempty"`
	Owner     string `protobuf:"bytes,6,opt,name=Owner,proto3" json:"Owner,omitempty"`
	Timestamp int64  `protobuf:"varint,7,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	NftName   string `protobuf:"bytes,8,opt,name=NftName,proto3" json:"NftName,omitempty"`
}

func (x *HandleMintErc721Req) Reset() {
	*x = HandleMintErc721Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_mkp_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleMintErc721Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleMintErc721Req) ProtoMessage() {}

func (x *HandleMintErc721Req) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_mkp_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleMintErc721Req.ProtoReflect.Descriptor instead.
func (*HandleMintErc721Req) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_mkp_proto_rawDescGZIP(), []int{12}
}

func (x *HandleMintErc721Req) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

func (x *HandleMintErc721Req) GetNftId() string {
	if x != nil {
		return x.NftId
	}
	return ""
}

func (x *HandleMintErc721Req) GetCID() string {
	if x != nil {
		return x.CID
	}
	return ""
}

func (x *HandleMintErc721Req) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *HandleMintErc721Req) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *HandleMintErc721Req) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *HandleMintErc721Req) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HandleMintErc721Req) GetNftName() string {
	if x != nil {
		return x.NftName
	}
	return ""
}

type TransferErc20Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnHash   string `protobuf:"bytes,1,opt,name=TxnHash,proto3" json:"TxnHash,omitempty"`
	From      string `protobuf:"bytes,2,opt,name=From,proto3" json:"From,omitempty"`
	To        string `protobuf:"bytes,3,opt,name=To,proto3" json:"To,omitempty"`
	Value     uint64 `protobuf:"varint,4,opt,name=Value,proto3" json:"Value,omitempty"`
	Address   string `protobuf:"bytes,6,opt,name=Address,proto3" json:"Address,omitempty"`
	Timestamp int64  `protobuf:"varint,7,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
}

func (x *TransferErc20Req) Reset() {
	*x = TransferErc20Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k5_proto_proto_mkp_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferErc20Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferErc20Req) ProtoMessage() {}

func (x *TransferErc20Req) ProtoReflect() protoreflect.Message {
	mi := &file_k5_proto_proto_mkp_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferErc20Req.ProtoReflect.Descriptor instead.
func (*TransferErc20Req) Descriptor() ([]byte, []int) {
	return file_k5_proto_proto_mkp_proto_rawDescGZIP(), []int{13}
}

func (x *TransferErc20Req) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

func (x *TransferErc20Req) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TransferErc20Req) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TransferErc20Req) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TransferErc20Req) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TransferErc20Req) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_k5_proto_proto_mkp_proto protoreflect.FileDescriptor

var file_k5_proto_proto_mkp_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6b, 0x35, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6d, 0x6b, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xf8, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x66, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x66, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x57, 0x65, 0x69, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x57, 0x65, 0x69,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8a, 0x01, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x62, 0x75, 0x79, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x10, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x09,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x78,
	0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0xf7, 0x02, 0x0a, 0x10, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x78,
	0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x78, 0x6e,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x66, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x66, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x69,
	0x64, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x42, 0x69, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x57, 0x65, 0x69, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x57, 0x65, 0x69, 0x12, 0x21, 0x0a, 0x09, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x45, 0x6e,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x09, 0x52, 0x65, 0x76, 0x65, 0x61,
	0x6c, 0x45, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x4d, 0x69, 0x6e, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x0c, 0x4d, 0x69, 0x6e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x45, 0x6e, 0x64, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x4d, 0x69, 0x6e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0xec, 0x01, 0x0a, 0x0d, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0a, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x64,
	0x42, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x42, 0x69, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x42, 0x69, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x48, 0x02, 0x52, 0x07, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x42, 0x6c, 0x69, 0x6e, 0x64,
	0x65, 0x64, 0x42, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x42, 0x69, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x22, 0xa7,
	0x01, 0x0a, 0x15, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x76, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x78, 0x6e, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x78, 0x6e, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x42, 0x6c,
	0x69, 0x6e, 0x64, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x64, 0x42,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x78, 0x0a, 0x10, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54,
	0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x69, 0x64, 0x64, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x69, 0x64, 0x64, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x6b, 0x0a, 0x13, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x78, 0x6e,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x78, 0x6e, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x9d, 0x01, 0x0a, 0x15, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x78, 0x6e,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x78, 0x6e, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x32, 0x0a, 0x14, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69,
	0x67, 0x68, 0x65, 0x73, 0x74, 0x42, 0x69, 0x64, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73,
	0x74, 0x42, 0x69, 0x64, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22,
	0x27, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x66, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x66, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x66, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x4e, 0x66, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x49, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x49, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x17, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x72, 0x63, 0x37,
	0x32, 0x31, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46,
	0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x54, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xd3, 0x01, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x4d, 0x69, 0x6e, 0x74, 0x45, 0x72, 0x63, 0x37, 0x32, 0x31, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x66, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4e, 0x66, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x43, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x66, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4e, 0x66, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x10,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x72, 0x63, 0x32, 0x30, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72,
	0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x54, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x32, 0xd4, 0x0a, 0x0a,
	0x06, 0x4d, 0x6b, 0x70, 0x53, 0x76, 0x63, 0x12, 0x43, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x45, 0x72, 0x63, 0x32, 0x30, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x72, 0x63, 0x32,
	0x30, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x10,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x74, 0x45, 0x72, 0x63, 0x37, 0x32, 0x31,
	0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x74, 0x45, 0x72, 0x63, 0x37, 0x32, 0x31, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x51, 0x0a, 0x14, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x72, 0x63, 0x37, 0x32, 0x31, 0x12,
	0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x72, 0x63, 0x37, 0x32, 0x31, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x0e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x4e, 0x66, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x66, 0x74,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x66, 0x74, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x14, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x43, 0x0a, 0x10, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x69, 0x64, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x13, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x4f, 0x0a, 0x16, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x53, 0x0a, 0x18, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x13, 0x42, 0x6c, 0x69, 0x6e,
	0x64, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x0f, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x69, 0x64, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4d, 0x0a, 0x12, 0x42, 0x6c, 0x69, 0x6e, 0x64,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x12, 0x1f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x41, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x12, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x41,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x4e, 0x0a, 0x15, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x52, 0x0a, 0x17, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43,
	0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_k5_proto_proto_mkp_proto_rawDescOnce sync.Once
	file_k5_proto_proto_mkp_proto_rawDescData = file_k5_proto_proto_mkp_proto_rawDesc
)

func file_k5_proto_proto_mkp_proto_rawDescGZIP() []byte {
	file_k5_proto_proto_mkp_proto_rawDescOnce.Do(func() {
		file_k5_proto_proto_mkp_proto_rawDescData = protoimpl.X.CompressGZIP(file_k5_proto_proto_mkp_proto_rawDescData)
	})
	return file_k5_proto_proto_mkp_proto_rawDescData
}

var file_k5_proto_proto_mkp_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_k5_proto_proto_mkp_proto_goTypes = []interface{}{
	(*CreateTradingReq)(nil),        // 0: protobuf.CreateTradingReq
	(*UpdateTradingReq)(nil),        // 1: protobuf.UpdateTradingReq
	(*CancelTradingReq)(nil),        // 2: protobuf.CancelTradingReq
	(*AuctionCreateReq)(nil),        // 3: protobuf.AuctionCreateReq
	(*AuctionBidReq)(nil),           // 4: protobuf.AuctionBidReq
	(*BlindAuctionRevealReq)(nil),   // 5: protobuf.BlindAuctionRevealReq
	(*AuctionRefundReq)(nil),        // 6: protobuf.AuctionRefundReq
	(*AuctionCancelledReq)(nil),     // 7: protobuf.AuctionCancelledReq
	(*AuctionGrantRewardReq)(nil),   // 8: protobuf.AuctionGrantRewardReq
	(*CheckNftExistsReq)(nil),       // 9: protobuf.CheckNftExistsReq
	(*CheckNftExistsRes)(nil),       // 10: protobuf.CheckNftExistsRes
	(*HandleTransferErc721Req)(nil), // 11: protobuf.HandleTransferErc721Req
	(*HandleMintErc721Req)(nil),     // 12: protobuf.HandleMintErc721Req
	(*TransferErc20Req)(nil),        // 13: protobuf.TransferErc20Req
	(*emptypb.Empty)(nil),           // 14: google.protobuf.Empty
}
var file_k5_proto_proto_mkp_proto_depIdxs = []int32{
	13, // 0: protobuf.MkpSvc.TransferErc20:input_type -> protobuf.TransferErc20Req
	12, // 1: protobuf.MkpSvc.HandleMintErc721:input_type -> protobuf.HandleMintErc721Req
	11, // 2: protobuf.MkpSvc.HandleTransferErc721:input_type -> protobuf.HandleTransferErc721Req
	9,  // 3: protobuf.MkpSvc.CheckNftExists:input_type -> protobuf.CheckNftExistsReq
	3,  // 4: protobuf.MkpSvc.PublicAuctionCreated:input_type -> protobuf.AuctionCreateReq
	4,  // 5: protobuf.MkpSvc.PublicAuctionBid:input_type -> protobuf.AuctionBidReq
	6,  // 6: protobuf.MkpSvc.PublicAuctionRefund:input_type -> protobuf.AuctionRefundReq
	7,  // 7: protobuf.MkpSvc.PublicAuctionCancelled:input_type -> protobuf.AuctionCancelledReq
	8,  // 8: protobuf.MkpSvc.PublicAuctionGrantReward:input_type -> protobuf.AuctionGrantRewardReq
	3,  // 9: protobuf.MkpSvc.BlindAuctionCreated:input_type -> protobuf.AuctionCreateReq
	4,  // 10: protobuf.MkpSvc.BlindAuctionBid:input_type -> protobuf.AuctionBidReq
	5,  // 11: protobuf.MkpSvc.BlindAuctionReveal:input_type -> protobuf.BlindAuctionRevealReq
	6,  // 12: protobuf.MkpSvc.BlindAuctionRefund:input_type -> protobuf.AuctionRefundReq
	7,  // 13: protobuf.MkpSvc.BlindAuctionCancelled:input_type -> protobuf.AuctionCancelledReq
	8,  // 14: protobuf.MkpSvc.BlindAuctionGrantReward:input_type -> protobuf.AuctionGrantRewardReq
	0,  // 15: protobuf.MkpSvc.CreateTrading:input_type -> protobuf.CreateTradingReq
	1,  // 16: protobuf.MkpSvc.UpdateTrading:input_type -> protobuf.UpdateTradingReq
	2,  // 17: protobuf.MkpSvc.CancelTrading:input_type -> protobuf.CancelTradingReq
	14, // 18: protobuf.MkpSvc.TransferErc20:output_type -> google.protobuf.Empty
	14, // 19: protobuf.MkpSvc.HandleMintErc721:output_type -> google.protobuf.Empty
	14, // 20: protobuf.MkpSvc.HandleTransferErc721:output_type -> google.protobuf.Empty
	10, // 21: protobuf.MkpSvc.CheckNftExists:output_type -> protobuf.CheckNftExistsRes
	14, // 22: protobuf.MkpSvc.PublicAuctionCreated:output_type -> google.protobuf.Empty
	14, // 23: protobuf.MkpSvc.PublicAuctionBid:output_type -> google.protobuf.Empty
	14, // 24: protobuf.MkpSvc.PublicAuctionRefund:output_type -> google.protobuf.Empty
	14, // 25: protobuf.MkpSvc.PublicAuctionCancelled:output_type -> google.protobuf.Empty
	14, // 26: protobuf.MkpSvc.PublicAuctionGrantReward:output_type -> google.protobuf.Empty
	14, // 27: protobuf.MkpSvc.BlindAuctionCreated:output_type -> google.protobuf.Empty
	14, // 28: protobuf.MkpSvc.BlindAuctionBid:output_type -> google.protobuf.Empty
	14, // 29: protobuf.MkpSvc.BlindAuctionReveal:output_type -> google.protobuf.Empty
	14, // 30: protobuf.MkpSvc.BlindAuctionRefund:output_type -> google.protobuf.Empty
	14, // 31: protobuf.MkpSvc.BlindAuctionCancelled:output_type -> google.protobuf.Empty
	14, // 32: protobuf.MkpSvc.BlindAuctionGrantReward:output_type -> google.protobuf.Empty
	14, // 33: protobuf.MkpSvc.CreateTrading:output_type -> google.protobuf.Empty
	14, // 34: protobuf.MkpSvc.UpdateTrading:output_type -> google.protobuf.Empty
	14, // 35: protobuf.MkpSvc.CancelTrading:output_type -> google.protobuf.Empty
	18, // [18:36] is the sub-list for method output_type
	0,  // [0:18] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_k5_proto_proto_mkp_proto_init() }
func file_k5_proto_proto_mkp_proto_init() {
	if File_k5_proto_proto_mkp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_k5_proto_proto_mkp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTradingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_mkp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTradingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_mkp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelTradingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_mkp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_mkp_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionBidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_mkp_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlindAuctionRevealReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_mkp_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionRefundReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_mkp_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionCancelledReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_mkp_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionGrantRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_mkp_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckNftExistsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_mkp_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckNftExistsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_mkp_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleTransferErc721Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_mkp_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleMintErc721Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k5_proto_proto_mkp_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferErc20Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_k5_proto_proto_mkp_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_k5_proto_proto_mkp_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_k5_proto_proto_mkp_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_k5_proto_proto_mkp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_k5_proto_proto_mkp_proto_goTypes,
		DependencyIndexes: file_k5_proto_proto_mkp_proto_depIdxs,
		MessageInfos:      file_k5_proto_proto_mkp_proto_msgTypes,
	}.Build()
	File_k5_proto_proto_mkp_proto = out.File
	file_k5_proto_proto_mkp_proto_rawDesc = nil
	file_k5_proto_proto_mkp_proto_goTypes = nil
	file_k5_proto_proto_mkp_proto_depIdxs = nil
}
